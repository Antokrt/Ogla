import Head from 'next/head'
import styles from '../styles/Home.module.scss'
import Banner from "../Component/Banner";
import Footer from "../Component/Footer";
import {HotPostPhone, HotPost} from "../Component/Post/HotPost";
import {ChevronDoubleRightIcon} from "@heroicons/react/20/solid";
import PreviewHorizontalPostList from "../Component/Post/PreviewHorizontalPostList";
import CategoryHome from "../Component/CategoryHome";
import React, {Fragment} from "react";
import {useSession} from "next-auth/react";
import {GetTopBooksOnHomeApi} from "./api/book";
import {GetActiveMonthlyCateoryApi} from "./api/Category";
import {useRouter} from "next/router";
import {BannerBecameWriter} from "../Component/BannerBecameWriter";
import MusicHome from '../Component/MusicHome';
import ScreenSize from "../utils/Size";
import {HeaderHome} from "../Component/HeaderHome";
import {HeaderMainResponsive} from "../Component/HeaderMainResponsive";
import {Partner} from "../Component/Partner";

export async function getServerSideProps() {
    const cat = await GetActiveMonthlyCateoryApi();
    let data;
    if (!cat.err) {
        data = await GetTopBooksOnHomeApi(cat.data.fCat, cat.data.sCat);
    } else {
        data.err = true;
        return {
            props: {
                err: true,
            }
        }
    }

    return {
        props: {
            err: data.err,
            tops: data.tops,
            firstTopBooks: data.firstTop,
            secondTopBooks: data.secondTop,
            cat1: cat.data.fCat,
            cat2: cat.data.sCat
        }
    }
}

export default function Home({tops, firstTopBooks, secondTopBooks, cat1, cat2, err}) {

    const [width, height] = ScreenSize();

    const router = useRouter();

    return (
        <div className={styles.container}>
            <Head>
                <title>Ogla</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            {
                width > 950 ?
                    <div className={styles.header}>
                        <HeaderHome/>
                    </div> :
                    <HeaderMainResponsive/>
            }

            <Banner/>
            <CategoryHome/>
            {
                !err && tops && tops.length === 1 &&
                <div className={styles.hot}>
                    <div className={styles.headerHot}>
                        <h4>Populaires :</h4>
                        <h5 tabIndex={0} onClick={() => router.push({pathname: '/cat'})}>Tout
                            voir <ChevronDoubleRightIcon/></h5>
                    </div>

                    <div className={styles.hotContainer}>
                        {
                            width > 450 ?
                                <>
                                    {
                                        tops.map((item, i) => {
                                            return (
                                                <Fragment key={item._id}>
                                                    <HotPost
                                                        className={styles.hotItem}
                                                        authorImg={tops[i].author.img}
                                                        id={tops[i]?._id}
                                                        slug={tops[i]?.slug}
                                                        likes={tops[i]?.likes}
                                                        top={true}
                                                        title={tops[i]?.title} nbChapter={tops[i]?.nbChapters}
                                                        author={tops[i]?.author_pseudo}
                                                        img={tops[i]?.img} category={tops[i]?.category}
                                                        description={tops[i]?.summary}
                                                    />
                                                </Fragment>

                                            )
                                        })
                                    }

                                </>
                                :
                                <>
                                    {
                                        tops.map((item, i) => {
                                            return (
                                                <Fragment key={item._id}>
                                                    <HotPostPhone className={styles.hotItem}
                                                                  id={tops[i]?._id}
                                                                  slug={tops[i]?.slug}
                                                                  likes={tops[i]?.likes}
                                                                  top={true}
                                                                  title={tops[i]?.title} nbChapter={tops[i]?.nbChapters}
                                                                  author={tops[i]?.author_pseudo}
                                                                  img={tops[i]?.img} category={tops[i]?.category}
                                                                  description={tops[i]?.summary}
                                                    />
                                                </Fragment>

                                            )
                                        })
                                    }
                                </>
                        }


                    </div>
                    {
                        firstTopBooks.length !== 0 && secondTopBooks.length !== 0 &&
                        <>
                            <h5 className={styles.trendTitle}>Qu&apos;est ce qu&apos;on lit chez <strong>OGLA</strong> ?
                            </h5>

                            <div className={styles.previewPostListContainer}>
                                <PreviewHorizontalPostList list={firstTopBooks} title={'Tendance ' + cat1}/>
                                <div className={styles.sep}> </div>
                                <PreviewHorizontalPostList list={secondTopBooks} title={'Tendance ' + cat2}/>
                            </div>
                        </>
                    }
                </div>
            }

            <BannerBecameWriter/>
            <MusicHome/>
            <Partner/>
            <Footer/>
        </div>
    )
}
